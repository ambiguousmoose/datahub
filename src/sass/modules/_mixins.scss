@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model;
    -moz-box-sizing: $box-model;
    box-sizing: $box-model;
}


@mixin box-shadow($shade) {
    -webkit-box-shadow: $shade;
    -moz-box-shadow: $shade;
    box-shadow: $shade;
}

$default-background-size: cover;
@mixin background-size($background-size: $default-background-size) {
  -webkit-background-size: $background-size;
  -moz-background-size: $background-size;
  background-size: $background-size;
}

@mixin border-radius($radius: .5em) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin font-size($fsize-px) {
  font-size: $fsize-px + px;
  font-size: $fsize-px / 16 + rem;
}

@mixin word-wrap {
        white-space: -moz-pre-wrap;
        white-space: -o-pre-wrap;
        white-space: pre-wrap;
        word-wrap: break-word;
}

// vw vh fallback mixin
@mixin vh($val) {
  height: $val + 0%;  /* The Fallback */
  -webkit-height: $val + 0vh;
  -moz-height: $val + 0vh;
  -ms-height: $val + 0vh;
  -o-height: $val + 0vh;
}
@mixin vw($val) {
  width: $val + 0%;  /* The Fallback */
  -webkit-width: $val + 0vh;
  -moz-width: $val + 0vh;
  -ms-width: $val + 0vh;
  -o-width: $val + 0vh;
} 

//_structure with new major and minor breakpoints
$small: 24em;//384px
  $small-2: 29.75em;//476px
  $small-3: 39.8em;//636.8px
$medium: 46.8em;//748.8px
  $medium-2: 48em;//768px
$large: 50em;//800px
  $large-2: 54.5em;//872px
$xlarge: 60em;//960px
  $xlarge-2: 67em;//1072px
$xxlarge: 80em;//1280px
$oversized: 95em;//1520px

// various responsive breaks
@mixin respond-to($media) {
  @if $media == small {
    @media all and (min-width: $small) { @content; }
  } @else if $media == small-2 {
    @media all and (min-width: $small-2) { @content; }
  } @else if $media == small-3 {
    @media all and (min-width: $small-3) { @content; }
  } @else if $media == medium {
    @media all and (min-width: $medium) { @content; }
  } @else if $media == medium-2 {
    @media all and (min-width: $medium-2) { @content; }
  } @else if $media == large {
    @media all and (min-width: $large) { @content; }
  } @else if $media == large-2 {
    @media all and (min-width: $large-2) { @content; }
  } @else if $media == xlarge {
    @media all and (min-width: $xlarge) { @content; }
  } @else if $media == xlarge-2 {
    @media all and (min-width: $xlarge-2) { @content; }
  } @else if $media == xxlarge {
    @media all and (min-width: $xxlarge) { @content; }
  } @else if $media == oversized {
    @media all and (min-width: $oversized) { @content; }
  }
}
